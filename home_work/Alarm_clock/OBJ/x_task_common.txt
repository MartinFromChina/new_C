; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\x_task_common.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\x_task_common.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\HARDWARE\LED -I..\HARDWARE\LCD -I..\HARDWARE\KEY -I..\HARDWARE\SRAM -I..\HARDWARE\SDIO -I..\MALLOC -I..\USMART -I..\HARDWARE\SPI -I..\HARDWARE\W25QXX -I..\FATFS\exfuns -I..\FATFS\src -I..\TEXT -I..\FWLIB\inc -I..\HARDWARE\24CXX -I..\HARDWARE\IIC -I..\HARDWARE\I2S -I..\HARDWARE\WM8978 -I..\APP -I..\AUDIOCODEC\wav -I..\new_user -I..\new_user\task -I..\new_user\MVC -I..\..\..\module\common -I..\..\..\module\common\InsertLog -I..\..\..\module\common\loopqueue -I..\..\..\module\common\StateMachine -I..\..\..\module\common\priorityqueue -I..\..\..\module\common\Math -I..\..\..\module\component\const_loop_scheduler -I..\..\..\module\component\const_loop_scheduler\TemplateTask -I..\..\..\module\component\const_loop_scheduler\HierarchicalSM -I..\..\..\module\component\BlockableStateMachine -I..\..\..\module\customize\ButtonModule -I..\..\..\module\external\Segger\SEGGER_RTT_V640\Syscalls -I..\..\..\module\external\Segger\SEGGER_RTT_V640\RTT -I.\RTE\_AudioPlayer -I"D:\Program Files\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include" -I"D:\Program Files\ARM\CMSIS\Include" -I"D:\Program Files\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F407xx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DARM_COMPILER_PRESENT -DX_TASK_LOG_DEBUG_METHOD=SeggerRTT_LogDebug --omf_browse=..\obj\x_task_common.crf ..\..\..\module\component\const_loop_scheduler\x_task_common.c]
                          THUMB

                          AREA ||i.X_Task_32bitsBufClear||, CODE, READONLY, ALIGN=1

                  X_Task_32bitsBufClear PROC
;;;12     }
;;;13     X_Void X_Task_32bitsBufClear(uint32_t *p_buf,uint16_t length)
000000  4602              MOV      r2,r0
;;;14     {
;;;15     	uint16_t i;
;;;16         if(length == 0 || length == 0xffff ) {return;}
000002  b119              CBZ      r1,|L1.12|
000004  f64f73ff          MOV      r3,#0xffff
000008  4299              CMP      r1,r3
00000a  d100              BNE      |L1.14|
                  |L1.12|
;;;17     
;;;18     	for(i = 0;i<length;i++)
;;;19     	{
;;;20     		p_buf[i] = 0;
;;;21     	}
;;;22     }
00000c  4770              BX       lr
                  |L1.14|
00000e  2000              MOVS     r0,#0                 ;18
000010  e004              B        |L1.28|
                  |L1.18|
000012  2300              MOVS     r3,#0                 ;20
000014  f8423020          STR      r3,[r2,r0,LSL #2]     ;20
000018  1c43              ADDS     r3,r0,#1              ;18
00001a  b298              UXTH     r0,r3                 ;18
                  |L1.28|
00001c  4288              CMP      r0,r1                 ;18
00001e  dbf8              BLT      |L1.18|
000020  bf00              NOP      
000022  e7f3              B        |L1.12|
;;;23     /********************************************************************************************/
                          ENDP


                          AREA ||i.X_Task_ByteBufClear||, CODE, READONLY, ALIGN=1

                  X_Task_ByteBufClear PROC
;;;2      
;;;3      X_Void X_Task_ByteBufClear(uint8_t *p_buf,uint16_t length)
000000  4602              MOV      r2,r0
;;;4      {
;;;5      	uint16_t i;
;;;6          if(length == 0 || length == 0xffff ) {return;}
000002  b119              CBZ      r1,|L2.12|
000004  f64f73ff          MOV      r3,#0xffff
000008  4299              CMP      r1,r3
00000a  d100              BNE      |L2.14|
                  |L2.12|
;;;7      
;;;8      	for(i = 0;i<length;i++)
;;;9      	{
;;;10     		p_buf[i] = 0;
;;;11     	}
;;;12     }
00000c  4770              BX       lr
                  |L2.14|
00000e  2000              MOVS     r0,#0                 ;8
000010  e003              B        |L2.26|
                  |L2.18|
000012  2300              MOVS     r3,#0                 ;10
000014  5413              STRB     r3,[r2,r0]            ;10
000016  1c43              ADDS     r3,r0,#1              ;8
000018  b298              UXTH     r0,r3                 ;8
                  |L2.26|
00001a  4288              CMP      r0,r1                 ;8
00001c  dbf9              BLT      |L2.18|
00001e  bf00              NOP      
000020  e7f4              B        |L2.12|
;;;13     X_Void X_Task_32bitsBufClear(uint32_t *p_buf,uint16_t length)
                          ENDP


                          AREA ||i.X_Task_if_line_pop_All||, CODE, READONLY, ALIGN=1

                  X_Task_if_line_pop_All PROC
;;;30     
;;;31     X_Void X_Task_if_line_pop_All(uint16_t loop_deepth,uint16_t max_if_deepth,uint8_t *p_line_flag_buf,uint32_t *P_line_buf)
000000  b530              PUSH     {r4,r5,lr}
;;;32     {
000002  4604              MOV      r4,r0
;;;33         uint16_t i;
;;;34         // no need length or pointer check ,because the only caller is X_Task Marco 
;;;35         if(loop_deepth == 0) {return;}
000004  b904              CBNZ     r4,|L3.8|
                  |L3.6|
;;;36     
;;;37         for(i=0;i<max_if_deepth;i++)
;;;38         {
;;;39             if(p_line_flag_buf[i] != 0) 
;;;40             {
;;;41                 p_line_flag_buf[i] = 0;
;;;42                 P_line_buf[i] = 0;
;;;43             }
;;;44         }
;;;45     }
000006  bd30              POP      {r4,r5,pc}
                  |L3.8|
000008  2000              MOVS     r0,#0                 ;37
00000a  e007              B        |L3.28|
                  |L3.12|
00000c  5c15              LDRB     r5,[r2,r0]            ;39
00000e  b11d              CBZ      r5,|L3.24|
000010  2500              MOVS     r5,#0                 ;41
000012  5415              STRB     r5,[r2,r0]            ;41
000014  f8435020          STR      r5,[r3,r0,LSL #2]     ;42
                  |L3.24|
000018  1c45              ADDS     r5,r0,#1              ;37
00001a  b2a8              UXTH     r0,r5                 ;37
                  |L3.28|
00001c  4288              CMP      r0,r1                 ;37
00001e  dbf5              BLT      |L3.12|
000020  bf00              NOP      
000022  e7f0              B        |L3.6|
;;;46     
                          ENDP


                          AREA ||i.X_Task_if_line_push||, CODE, READONLY, ALIGN=1

                  X_Task_if_line_push PROC
;;;23     /********************************************************************************************/
;;;24     X_Void X_Task_if_line_push(uint16_t loop_deepth,uint16_t if_deepth,uint8_t *p_line_flag_buf)
000000  b900              CBNZ     r0,|L4.4|
                  |L4.2|
;;;25     {
;;;26         // no need length or pointer check ,because the only caller is X_Task Marco 
;;;27         if(loop_deepth == 0) {return;}
;;;28         p_line_flag_buf[if_deepth] = 1;
;;;29     }
000002  4770              BX       lr
                  |L4.4|
000004  2301              MOVS     r3,#1                 ;28
000006  5453              STRB     r3,[r2,r1]            ;28
000008  bf00              NOP      
00000a  e7fa              B        |L4.2|
;;;30     
                          ENDP


                          AREA ||i.X_Task_loop_line_pop_all||, CODE, READONLY, ALIGN=1

                  X_Task_loop_line_pop_all PROC
;;;46     
;;;47     X_Void X_Task_loop_line_pop_all(uint16_t loop_deepth,uint16_t max_loop_deepth,uint32_t *P_end_line_buf,uint32_t *P_line_buf)
000000  b530              PUSH     {r4,r5,lr}
;;;48     {
000002  4604              MOV      r4,r0
;;;49         uint16_t i;
;;;50         // no need length or pointer check ,because the only caller is X_Task Marco 
;;;51         ////////////printf("loop pop from %d to %d\r\n",loop_deepth,max_loop_deepth-1);
;;;52         for(i=loop_deepth;i<max_loop_deepth;i++)
000004  4620              MOV      r0,r4
000006  e006              B        |L5.22|
                  |L5.8|
;;;53         {
;;;54             P_end_line_buf[i] = 0;
000008  2500              MOVS     r5,#0
00000a  f8425020          STR      r5,[r2,r0,LSL #2]
;;;55             P_line_buf[i] = 0;
00000e  f8435020          STR      r5,[r3,r0,LSL #2]
000012  1c45              ADDS     r5,r0,#1              ;52
000014  b2a8              UXTH     r0,r5                 ;52
                  |L5.22|
000016  4288              CMP      r0,r1                 ;52
000018  dbf6              BLT      |L5.8|
;;;56         }
;;;57     }
00001a  bd30              POP      {r4,r5,pc}
;;;58     /********************************************************************************************/
                          ENDP

