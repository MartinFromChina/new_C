; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\stm32f4xx_it.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\stm32f4xx_it.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\HARDWARE\LED -I..\HARDWARE\LCD -I..\HARDWARE\KEY -I..\HARDWARE\SRAM -I..\HARDWARE\SDIO -I..\MALLOC -I..\USMART -I..\HARDWARE\SPI -I..\HARDWARE\W25QXX -I..\FATFS\exfuns -I..\FATFS\src -I..\TEXT -I..\FWLIB\inc -I..\HARDWARE\24CXX -I..\HARDWARE\IIC -I..\HARDWARE\I2S -I..\HARDWARE\WM8978 -I..\APP -I..\AUDIOCODEC\wav -I..\new_user -I..\new_user\task -I..\new_user\MVC -I..\..\..\module\common -I..\..\..\module\common\InsertLog -I..\..\..\module\common\loopqueue -I..\..\..\module\common\StateMachine -I..\..\..\module\common\priorityqueue -I..\..\..\module\common\Math -I..\..\..\module\component\const_loop_scheduler -I..\..\..\module\component\const_loop_scheduler\TemplateTask -I..\..\..\module\component\const_loop_scheduler\HierarchicalSM -I..\..\..\module\component\BlockableStateMachine -I..\..\..\module\customize\ButtonModule -I..\..\..\module\external\Segger\SEGGER_RTT_V640\Syscalls -I..\..\..\module\external\Segger\SEGGER_RTT_V640\RTT -I.\RTE\_AudioPlayer -I"D:\Program Files\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include" -I"D:\Program Files\ARM\CMSIS\Include" -I"D:\Program Files\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F407xx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DARM_COMPILER_PRESENT -DX_TASK_LOG_DEBUG_METHOD=SeggerRTT_LogDebug --omf_browse=..\obj\stm32f4xx_it.crf stm32f4xx_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;88       */
;;;89     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;90     {
;;;91       /* Go to infinite loop when Bus Fault exception occurs */
;;;92       while (1)
000002  e7fe              B        |L1.2|
;;;93       {
;;;94       }
;;;95     }
;;;96     
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;123      */
;;;124    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;125    {
;;;126    }
;;;127    
                          ENDP


                          AREA ||i.GetSysCnt||, CODE, READONLY, ALIGN=2

                  GetSysCnt PROC
;;;162    }
;;;163    uint32_t GetSysCnt(void)
000000  4901              LDR      r1,|L3.8|
;;;164    {
;;;165    	uint32_t temp;
;;;166    	temp = sys_cnt;
000002  6808              LDR      r0,[r1,#0]  ; sys_cnt
;;;167     return temp;
;;;168    }
000004  4770              BX       lr
;;;169    /******************************************************************************/
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      sys_cnt

                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
;;;62       */
;;;63     void HardFault_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;64     {
;;;65       /* Go to infinite loop when Hard Fault exception occurs */
;;;66       while (1)
000002  e7fe              B        |L4.2|
;;;67       {
;;;68       }
;;;69     }
;;;70     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;75       */
;;;76     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L5.2|
;;;77     {
;;;78       /* Go to infinite loop when Memory Manage exception occurs */
;;;79       while (1)
000002  e7fe              B        |L5.2|
;;;80       {
;;;81       }
;;;82     }
;;;83     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;53       */
;;;54     void NMI_Handler(void)
000000  4770              BX       lr
;;;55     {
;;;56     }
;;;57     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;132      */
;;;133    void PendSV_Handler(void)
000000  4770              BX       lr
;;;134    {
;;;135    }
;;;136    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;114      */
;;;115    void SVC_Handler(void)
000000  4770              BX       lr
;;;116    {
;;;117    }
;;;118    
                          ENDP


                          AREA ||i.SetSysCnt||, CODE, READONLY, ALIGN=2

                  SetSysCnt PROC
;;;158    
;;;159    void SetSysCnt(uint32_t ms)
000000  4901              LDR      r1,|L9.8|
;;;160    {
;;;161    	sys_cnt = ms;
000002  6008              STR      r0,[r1,#0]  ; sys_cnt
;;;162    }
000004  4770              BX       lr
;;;163    uint32_t GetSysCnt(void)
                          ENDP

000006  0000              DCW      0x0000
                  |L9.8|
                          DCD      sys_cnt

                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=2

                  SysTick_Handler PROC
;;;151    
;;;152    void SysTick_Handler(void)
000000  4806              LDR      r0,|L10.28|
;;;153    {
;;;154    //////////	printf(" this is systick\r\n");
;;;155    	if(sys_cnt > 0) {sys_cnt --;}
000002  6800              LDR      r0,[r0,#0]  ; sys_cnt
000004  b120              CBZ      r0,|L10.16|
000006  4805              LDR      r0,|L10.28|
000008  6800              LDR      r0,[r0,#0]  ; sys_cnt
00000a  1e40              SUBS     r0,r0,#1
00000c  4903              LDR      r1,|L10.28|
00000e  6008              STR      r0,[r1,#0]  ; sys_cnt
                  |L10.16|
;;;156        ms_cnt ++;
000010  4803              LDR      r0,|L10.32|
000012  6800              LDR      r0,[r0,#0]  ; ms_cnt
000014  1c40              ADDS     r0,r0,#1
000016  4902              LDR      r1,|L10.32|
000018  6008              STR      r0,[r1,#0]  ; ms_cnt
;;;157    }
00001a  4770              BX       lr
;;;158    
                          ENDP

                  |L10.28|
                          DCD      sys_cnt
                  |L10.32|
                          DCD      ms_cnt

                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;101      */
;;;102    void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L11.2|
;;;103    {
;;;104      /* Go to infinite loop when Usage Fault exception occurs */
;;;105      while (1)
000002  e7fe              B        |L11.2|
;;;106      {
;;;107      }
;;;108    }
;;;109    
                          ENDP


                          AREA ||i.mFunc_SoftTimerGetSysTickCnt||, CODE, READONLY, ALIGN=2

                  mFunc_SoftTimerGetSysTickCnt PROC
;;;144    
;;;145    uint32_t mFunc_SoftTimerGetSysTickCnt(void)
000000  4901              LDR      r1,|L12.8|
;;;146    {
;;;147        uint32_t ms_backup;
;;;148        ms_backup = ms_cnt;
000002  6808              LDR      r0,[r1,#0]  ; ms_cnt
;;;149        return ms_backup;
;;;150    }
000004  4770              BX       lr
;;;151    
                          ENDP

000006  0000              DCW      0x0000
                  |L12.8|
                          DCD      ms_cnt

                          AREA ||.data||, DATA, ALIGN=2

                  sys_cnt
                          DCD      0x00000000
                  ms_cnt
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "stm32f4xx_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f4xx_it_c_bb8ca80c____REV16|
#line 129 "..\\CORE\\core_cmInstr.h"
|__asm___14_stm32f4xx_it_c_bb8ca80c____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f4xx_it_c_bb8ca80c____REVSH|
#line 144
|__asm___14_stm32f4xx_it_c_bb8ca80c____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
