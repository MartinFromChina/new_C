; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\template_task.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\template_task.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\HARDWARE\LED -I..\HARDWARE\LCD -I..\HARDWARE\KEY -I..\HARDWARE\SRAM -I..\HARDWARE\SDIO -I..\MALLOC -I..\USMART -I..\HARDWARE\SPI -I..\HARDWARE\W25QXX -I..\FATFS\exfuns -I..\FATFS\src -I..\TEXT -I..\FWLIB\inc -I..\HARDWARE\24CXX -I..\HARDWARE\IIC -I..\HARDWARE\I2S -I..\HARDWARE\WM8978 -I..\APP -I..\AUDIOCODEC\wav -I..\new_user -I..\new_user\task -I..\new_user\MVC -I..\..\..\module\common -I..\..\..\module\common\InsertLog -I..\..\..\module\common\loopqueue -I..\..\..\module\common\StateMachine -I..\..\..\module\common\priorityqueue -I..\..\..\module\common\Math -I..\..\..\module\component\const_loop_scheduler -I..\..\..\module\component\const_loop_scheduler\TemplateTask -I..\..\..\module\component\const_loop_scheduler\HierarchicalSM -I..\..\..\module\component\BlockableStateMachine -I..\..\..\module\customize\ButtonModule -I..\..\..\module\external\Segger\SEGGER_RTT_V640\Syscalls -I..\..\..\module\external\Segger\SEGGER_RTT_V640\RTT -I.\RTE\_AudioPlayer -I"D:\Program Files\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include" -I"D:\Program Files\ARM\CMSIS\Include" -I"D:\Program Files\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F407xx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DARM_COMPILER_PRESENT -DX_TASK_LOG_DEBUG_METHOD=SeggerRTT_LogDebug --omf_browse=..\obj\template_task.crf ..\..\..\module\component\const_loop_scheduler\TemplateTask\template_task.c]
                          THUMB

                          AREA ||i.freeze_t_task||, CODE, READONLY, ALIGN=1

                  freeze_t_task PROC
;;;61     
;;;62     e_x_task_error_code freeze_t_task(const s_T_Tasks_Manager *p_manager,uint16_t instance_id)
000000  4602              MOV      r2,r0
;;;63     {
;;;64         if(p_manager == (s_T_Tasks_Manager *)0) 
000002  b90a              CBNZ     r2,|L1.8|
;;;65         {
;;;66             return xte_pointer_null; //X_TASK_LOG(1,(" fatal freeze error !!! : task manager pointer null \r\n"));
000004  2001              MOVS     r0,#1
                  |L1.6|
;;;67         }
;;;68         if(*p_manager ->p_is_init_ok == 0) 
;;;69         {
;;;70             return xte_init_failed; //X_TASK_LOG(1,(" fatal freeze error !!! : init failed \r\n"));
;;;71         }
;;;72     
;;;73         if(instance_id >= p_manager ->instance_num)
;;;74         {
;;;75             return xte_beyond_scope;
;;;76         }
;;;77     
;;;78         p_manager ->p_freeze_flag_buf[instance_id] = 1;
;;;79     
;;;80         return xte_ok;
;;;81     }
000006  4770              BX       lr
                  |L1.8|
000008  6990              LDR      r0,[r2,#0x18]         ;68
00000a  7800              LDRB     r0,[r0,#0]            ;68
00000c  b908              CBNZ     r0,|L1.18|
00000e  2003              MOVS     r0,#3                 ;70
000010  e7f9              B        |L1.6|
                  |L1.18|
000012  8a10              LDRH     r0,[r2,#0x10]         ;73
000014  4288              CMP      r0,r1                 ;73
000016  dc01              BGT      |L1.28|
000018  2002              MOVS     r0,#2                 ;75
00001a  e7f4              B        |L1.6|
                  |L1.28|
00001c  2001              MOVS     r0,#1                 ;78
00001e  6a13              LDR      r3,[r2,#0x20]         ;78
000020  5458              STRB     r0,[r3,r1]            ;78
000022  2000              MOVS     r0,#0                 ;80
000024  e7ef              B        |L1.6|
;;;82     e_x_task_error_code unfreeze_t_task(const s_T_Tasks_Manager *p_manager,uint16_t instance_id)
                          ENDP


                          AREA ||i.restart_t_task||, CODE, READONLY, ALIGN=1

                  restart_t_task PROC
;;;101    }
;;;102    e_x_task_error_code restart_t_task(const s_T_Tasks_Manager *p_manager,uint16_t instance_id)
000000  4602              MOV      r2,r0
;;;103    {
;;;104        if(p_manager == (s_T_Tasks_Manager *)0) 
000002  b90a              CBNZ     r2,|L2.8|
;;;105        {
;;;106            return xte_pointer_null;   ////////X_TASK_LOG(1,(" fatal restart error !!! : task manager pointer null \r\n"));
000004  2001              MOVS     r0,#1
                  |L2.6|
;;;107        }
;;;108        if(*p_manager ->p_is_init_ok == 0) 
;;;109        {
;;;110            return xte_init_failed;  /////////X_TASK_LOG(1,(" fatal restart error !!! : init failed \r\n"));
;;;111        }
;;;112    
;;;113        if(instance_id >= p_manager ->instance_num)
;;;114        {
;;;115            return xte_beyond_scope;
;;;116        }
;;;117    
;;;118        p_manager ->p_freeze_flag_buf[instance_id] = 0;
;;;119        p_manager ->p_init_flag_buf[instance_id] = 0;
;;;120    
;;;121        return  xte_ok;
;;;122    }
000006  4770              BX       lr
                  |L2.8|
000008  6990              LDR      r0,[r2,#0x18]         ;108
00000a  7800              LDRB     r0,[r0,#0]            ;108
00000c  b908              CBNZ     r0,|L2.18|
00000e  2003              MOVS     r0,#3                 ;110
000010  e7f9              B        |L2.6|
                  |L2.18|
000012  8a10              LDRH     r0,[r2,#0x10]         ;113
000014  4288              CMP      r0,r1                 ;113
000016  dc01              BGT      |L2.28|
000018  2002              MOVS     r0,#2                 ;115
00001a  e7f4              B        |L2.6|
                  |L2.28|
00001c  2000              MOVS     r0,#0                 ;118
00001e  6a13              LDR      r3,[r2,#0x20]         ;118
000020  5458              STRB     r0,[r3,r1]            ;118
000022  69d3              LDR      r3,[r2,#0x1c]         ;119
000024  5458              STRB     r0,[r3,r1]            ;119
000026  bf00              NOP                            ;121
000028  e7ed              B        |L2.6|
                          ENDP


                          AREA ||i.t_task_init||, CODE, READONLY, ALIGN=1

                  t_task_init PROC
;;;2      /********************************************************************************************/
;;;3      e_x_task_error_code t_task_init(const s_T_Tasks_Manager *p_manager)
000000  4601              MOV      r1,r0
;;;4      {
;;;5          uint16_t i;
;;;6          if(p_manager == (s_T_Tasks_Manager *)0) 
000002  b909              CBNZ     r1,|L3.8|
;;;7          {
;;;8              return xte_pointer_null;
000004  2001              MOVS     r0,#1
                  |L3.6|
;;;9          }
;;;10         if(p_manager ->instance_num > MAX_TEMPLATE_INSTANCE_NUM  
;;;11             || p_manager ->instance_with_name_num > MAX_TEMPLATE_INSTANCE_NUM 
;;;12             || p_manager ->instance_num == 0) 
;;;13         {
;;;14             return xte_beyond_scope;
;;;15         }
;;;16         if(p_manager ->p_template_task_func == (t_task_func)0)  //X_TASK_LOG(1,(" fatal init error !!! : task list null \r\n"));
;;;17         {
;;;18             return xte_pointer_null;
;;;19         }
;;;20     
;;;21       //  fix it later : 此处可以将每个任务的task id 排序，然后依次比较，发现有相同的相邻的ID就返回 FALSE ，稍后再做
;;;22       //  或者干脆就用枚举类型做task ID,这样就不会重复了
;;;23         for(i=0;i<p_manager -> instance_num;i++)
;;;24         {
;;;25             p_manager ->p_freeze_flag_buf[i] = 0;
;;;26             p_manager ->p_init_flag_buf[i]   = 0;
;;;27         } 
;;;28         
;;;29         *p_manager ->p_is_init_ok = 1;//X_TASK_LOG(1,(" ~~~~~~ task init success ~~~~~~~ ; total task instance number %d \r\n",p_manager -> instance_num));
;;;30         return xte_ok;
;;;31     }
000006  4770              BX       lr
                  |L3.8|
000008  8a08              LDRH     r0,[r1,#0x10]         ;10
00000a  2864              CMP      r0,#0x64              ;10
00000c  dc04              BGT      |L3.24|
00000e  8a48              LDRH     r0,[r1,#0x12]         ;11
000010  2864              CMP      r0,#0x64              ;11
000012  dc01              BGT      |L3.24|
000014  8a08              LDRH     r0,[r1,#0x10]         ;12
000016  b908              CBNZ     r0,|L3.28|
                  |L3.24|
000018  2002              MOVS     r0,#2                 ;14
00001a  e7f4              B        |L3.6|
                  |L3.28|
00001c  6a48              LDR      r0,[r1,#0x24]         ;16
00001e  b908              CBNZ     r0,|L3.36|
000020  2001              MOVS     r0,#1                 ;18
000022  e7f0              B        |L3.6|
                  |L3.36|
000024  2200              MOVS     r2,#0                 ;23
000026  e006              B        |L3.54|
                  |L3.40|
000028  2000              MOVS     r0,#0                 ;25
00002a  6a0b              LDR      r3,[r1,#0x20]         ;25
00002c  5498              STRB     r0,[r3,r2]            ;25
00002e  69cb              LDR      r3,[r1,#0x1c]         ;26
000030  5498              STRB     r0,[r3,r2]            ;26
000032  1c50              ADDS     r0,r2,#1              ;23
000034  b282              UXTH     r2,r0                 ;23
                  |L3.54|
000036  8a08              LDRH     r0,[r1,#0x10]         ;23
000038  4290              CMP      r0,r2                 ;23
00003a  dcf5              BGT      |L3.40|
00003c  2001              MOVS     r0,#1                 ;29
00003e  698b              LDR      r3,[r1,#0x18]         ;29
000040  7018              STRB     r0,[r3,#0]            ;29
000042  2000              MOVS     r0,#0                 ;30
000044  e7df              B        |L3.6|
;;;32     
                          ENDP


                          AREA ||i.t_task_scheduler||, CODE, READONLY, ALIGN=2

                  t_task_scheduler PROC
;;;32     
;;;33     e_x_task_error_code  t_task_scheduler(const s_T_Tasks_Manager *p_manager,uint32_t ms)
000000  b5f8              PUSH     {r3-r7,lr}
;;;34     {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
;;;35         uint16_t i;
;;;36     
;;;37         if(p_manager == (s_T_Tasks_Manager *)0) 
000006  b90c              CBNZ     r4,|L4.12|
;;;38         {
;;;39             return xte_pointer_null; //X_TASK_LOG(1,(" fatal scheduler error !!! : task manager pointer null \r\n"));
000008  2001              MOVS     r0,#1
                  |L4.10|
;;;40         }
;;;41         if(*p_manager ->p_is_init_ok == 0) 
;;;42         {
;;;43             return xte_init_failed; //X_TASK_LOG(1,(" fatal scheduler error !!! : init failed \r\n"));
;;;44         }
;;;45          
;;;46         for(i=0;i<p_manager ->instance_num;i++)
;;;47         {
;;;48             if(p_manager ->p_freeze_flag_buf[i] == 0)
;;;49             {
;;;50                 p_manager ->p_template_task_func(
;;;51                     ms,
;;;52                     &(p_manager ->p_init_flag_buf[i]),
;;;53                     p_manager ->p_param_buf[i],
;;;54                     i,
;;;55                     (i >= p_manager ->instance_with_name_num ) ? (uint8_t *)"noname " : &p_manager ->p_instance_name_buf[(i + 1)*MAX_TEMPLATE_INSTANCE_NAME_LENGTH]
;;;56                 );
;;;57             }
;;;58         }
;;;59     	return xte_ok;
;;;60     }
00000a  bdf8              POP      {r3-r7,pc}
                  |L4.12|
00000c  69a0              LDR      r0,[r4,#0x18]         ;41
00000e  7800              LDRB     r0,[r0,#0]            ;41
000010  b908              CBNZ     r0,|L4.22|
000012  2003              MOVS     r0,#3                 ;43
000014  e7f9              B        |L4.10|
                  |L4.22|
000016  2500              MOVS     r5,#0                 ;46
000018  e018              B        |L4.76|
                  |L4.26|
00001a  6a20              LDR      r0,[r4,#0x20]         ;48
00001c  5d40              LDRB     r0,[r0,r5]            ;48
00001e  b998              CBNZ     r0,|L4.72|
000020  8a60              LDRH     r0,[r4,#0x12]         ;50
000022  42a8              CMP      r0,r5                 ;50
000024  dc01              BGT      |L4.42|
000026  a00c              ADR      r0,|L4.88|
000028  e004              B        |L4.52|
                  |L4.42|
00002a  1c68              ADDS     r0,r5,#1              ;55
00002c  ebc01000          RSB      r0,r0,r0,LSL #4       ;55
000030  6961              LDR      r1,[r4,#0x14]         ;55
000032  4408              ADD      r0,r0,r1              ;55
                  |L4.52|
000034  9000              STR      r0,[sp,#0]            ;55
000036  6aa0              LDR      r0,[r4,#0x28]         ;55
000038  f8502025          LDR      r2,[r0,r5,LSL #2]     ;55
00003c  69e0              LDR      r0,[r4,#0x1c]         ;55
00003e  1941              ADDS     r1,r0,r5              ;55
000040  462b              MOV      r3,r5                 ;55
000042  4630              MOV      r0,r6                 ;55
000044  6a67              LDR      r7,[r4,#0x24]         ;55
000046  47b8              BLX      r7                    ;55
                  |L4.72|
000048  1c68              ADDS     r0,r5,#1              ;46
00004a  b285              UXTH     r5,r0                 ;46
                  |L4.76|
00004c  8a20              LDRH     r0,[r4,#0x10]         ;46
00004e  42a8              CMP      r0,r5                 ;46
000050  dce3              BGT      |L4.26|
000052  2000              MOVS     r0,#0                 ;59
000054  e7d9              B        |L4.10|
;;;61     
                          ENDP

000056  0000              DCW      0x0000
                  |L4.88|
000058  6e6f6e61          DCB      "noname ",0
00005c  6d652000

                          AREA ||i.unfreeze_t_task||, CODE, READONLY, ALIGN=1

                  unfreeze_t_task PROC
;;;81     }
;;;82     e_x_task_error_code unfreeze_t_task(const s_T_Tasks_Manager *p_manager,uint16_t instance_id)
000000  4602              MOV      r2,r0
;;;83     {
;;;84         if(p_manager == (s_T_Tasks_Manager *)0) 
000002  b90a              CBNZ     r2,|L5.8|
;;;85         {
;;;86             return xte_pointer_null; //X_TASK_LOG(1,(" fatal unfreeze error !!! : task manager pointer null \r\n"));
000004  2001              MOVS     r0,#1
                  |L5.6|
;;;87         }
;;;88         if(*p_manager ->p_is_init_ok == 0) 
;;;89         {
;;;90             return xte_init_failed; // X_TASK_LOG(1,(" fatal unfreeze error !!! : init failed \r\n"));
;;;91         }
;;;92     
;;;93         if(instance_id >= p_manager ->instance_num)
;;;94         {
;;;95             return xte_beyond_scope;
;;;96         }
;;;97     
;;;98         p_manager ->p_freeze_flag_buf[instance_id] = 0;
;;;99     
;;;100        return xte_ok;
;;;101    }
000006  4770              BX       lr
                  |L5.8|
000008  6990              LDR      r0,[r2,#0x18]         ;88
00000a  7800              LDRB     r0,[r0,#0]            ;88
00000c  b908              CBNZ     r0,|L5.18|
00000e  2003              MOVS     r0,#3                 ;90
000010  e7f9              B        |L5.6|
                  |L5.18|
000012  8a10              LDRH     r0,[r2,#0x10]         ;93
000014  4288              CMP      r0,r1                 ;93
000016  dc01              BGT      |L5.28|
000018  2002              MOVS     r0,#2                 ;95
00001a  e7f4              B        |L5.6|
                  |L5.28|
00001c  2000              MOVS     r0,#0                 ;98
00001e  6a13              LDR      r3,[r2,#0x20]         ;98
000020  5458              STRB     r0,[r3,r1]            ;98
000022  bf00              NOP                            ;100
000024  e7ef              B        |L5.6|
;;;102    e_x_task_error_code restart_t_task(const s_T_Tasks_Manager *p_manager,uint16_t instance_id)
                          ENDP

