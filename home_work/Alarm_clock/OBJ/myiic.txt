; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\myiic.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\myiic.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\HARDWARE\LED -I..\HARDWARE\LCD -I..\HARDWARE\KEY -I..\HARDWARE\SRAM -I..\HARDWARE\SDIO -I..\MALLOC -I..\USMART -I..\HARDWARE\SPI -I..\HARDWARE\W25QXX -I..\FATFS\exfuns -I..\FATFS\src -I..\TEXT -I..\FWLIB\inc -I..\HARDWARE\24CXX -I..\HARDWARE\IIC -I..\HARDWARE\I2S -I..\HARDWARE\WM8978 -I..\APP -I..\AUDIOCODEC\wav -I..\new_user -I..\new_user\task -I..\new_user\MVC -I..\..\..\module\common -I..\..\..\module\common\InsertLog -I..\..\..\module\common\loopqueue -I..\..\..\module\common\StateMachine -I..\..\..\module\common\priorityqueue -I..\..\..\module\common\Math -I..\..\..\module\component\const_loop_scheduler -I..\..\..\module\component\const_loop_scheduler\TemplateTask -I..\..\..\module\component\const_loop_scheduler\HierarchicalSM -I..\..\..\module\component\BlockableStateMachine -I..\..\..\module\customize\ButtonModule -I..\..\..\module\external\Segger\SEGGER_RTT_V640\Syscalls -I..\..\..\module\external\Segger\SEGGER_RTT_V640\RTT -I.\RTE\_AudioPlayer -I"D:\Program Files\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include" -I"D:\Program Files\ARM\CMSIS\Include" -I"D:\Program Files\ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F407xx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DARM_COMPILER_PRESENT -DX_TASK_LOG_DEBUG_METHOD=SeggerRTT_LogDebug --omf_browse=..\obj\myiic.crf ..\HARDWARE\IIC\myiic.c]
                          THUMB

                          AREA ||i.IIC_Ack||, CODE, READONLY, ALIGN=2

                  IIC_Ack PROC
;;;76     //产生ACK应答
;;;77     void IIC_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;78     {
;;;79     	IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490f              LDR      r1,|L1.68|
000006  6008              STR      r0,[r1,#0]
;;;80     	SDA_OUT();
000008  480f              LDR      r0,|L1.72|
00000a  6800              LDR      r0,[r0,#0]
00000c  f4202040          BIC      r0,r0,#0xc0000
000010  490d              LDR      r1,|L1.72|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f4402080          ORR      r0,r0,#0x40000
00001c  6008              STR      r0,[r1,#0]
;;;81     	IIC_SDA=0;
00001e  2000              MOVS     r0,#0
000020  490a              LDR      r1,|L1.76|
000022  f8c102a4          STR      r0,[r1,#0x2a4]
;;;82     	delay_us(2);
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       delay_us
;;;83     	IIC_SCL=1;
00002c  2001              MOVS     r0,#1
00002e  4905              LDR      r1,|L1.68|
000030  6008              STR      r0,[r1,#0]
;;;84     	delay_us(2);
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       delay_us
;;;85     	IIC_SCL=0;
000038  2000              MOVS     r0,#0
00003a  4904              LDR      r1,|L1.76|
00003c  f8c102a0          STR      r0,[r1,#0x2a0]
;;;86     }
000040  bd10              POP      {r4,pc}
;;;87     //不产生ACK应答		    
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
                          DCD      0x424082a0
                  |L1.72|
                          DCD      0x40020400
                  |L1.76|
                          DCD      0x42408000

                          AREA ||i.IIC_Init||, CODE, READONLY, ALIGN=2

                  IIC_Init PROC
;;;16     //初始化IIC
;;;17     void IIC_Init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;18     {			
;;;19       GPIO_InitTypeDef  GPIO_InitStructure;
;;;20     
;;;21       RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);//使能GPIOB时钟
000002  2101              MOVS     r1,#1
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;22     
;;;23       //GPIOB8,B9初始化设置
;;;24       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9;
00000a  f44f7040          MOV      r0,#0x300
00000e  9000              STR      r0,[sp,#0]
;;;25       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;//普通输出模式
000010  2001              MOVS     r0,#1
000012  f88d0004          STRB     r0,[sp,#4]
;;;26       GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出
000016  2000              MOVS     r0,#0
000018  f88d0006          STRB     r0,[sp,#6]
;;;27       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;//100MHz
00001c  2003              MOVS     r0,#3
00001e  f88d0005          STRB     r0,[sp,#5]
;;;28       GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;//上拉
000022  2001              MOVS     r0,#1
000024  f88d0007          STRB     r0,[sp,#7]
;;;29       GPIO_Init(GPIOB, &GPIO_InitStructure);//初始化
000028  4669              MOV      r1,sp
00002a  4805              LDR      r0,|L2.64|
00002c  f7fffffe          BL       GPIO_Init
;;;30     	IIC_SCL=1;
000030  2001              MOVS     r0,#1
000032  4904              LDR      r1,|L2.68|
000034  6008              STR      r0,[r1,#0]
;;;31     	IIC_SDA=1;
000036  4904              LDR      r1,|L2.72|
000038  f8c102a4          STR      r0,[r1,#0x2a4]
;;;32     }
00003c  bd1c              POP      {r2-r4,pc}
;;;33     //产生IIC起始信号
                          ENDP

00003e  0000              DCW      0x0000
                  |L2.64|
                          DCD      0x40020400
                  |L2.68|
                          DCD      0x424082a0
                  |L2.72|
                          DCD      0x42408000

                          AREA ||i.IIC_NAck||, CODE, READONLY, ALIGN=2

                  IIC_NAck PROC
;;;87     //不产生ACK应答		    
;;;88     void IIC_NAck(void)
000000  b510              PUSH     {r4,lr}
;;;89     {
;;;90     	IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490f              LDR      r1,|L3.68|
000006  6008              STR      r0,[r1,#0]
;;;91     	SDA_OUT();
000008  480f              LDR      r0,|L3.72|
00000a  6800              LDR      r0,[r0,#0]
00000c  f4202040          BIC      r0,r0,#0xc0000
000010  490d              LDR      r1,|L3.72|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f4402080          ORR      r0,r0,#0x40000
00001c  6008              STR      r0,[r1,#0]
;;;92     	IIC_SDA=1;
00001e  2001              MOVS     r0,#1
000020  490a              LDR      r1,|L3.76|
000022  f8c102a4          STR      r0,[r1,#0x2a4]
;;;93     	delay_us(2);
000026  2002              MOVS     r0,#2
000028  f7fffffe          BL       delay_us
;;;94     	IIC_SCL=1;
00002c  2001              MOVS     r0,#1
00002e  4905              LDR      r1,|L3.68|
000030  6008              STR      r0,[r1,#0]
;;;95     	delay_us(2);
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       delay_us
;;;96     	IIC_SCL=0;
000038  2000              MOVS     r0,#0
00003a  4904              LDR      r1,|L3.76|
00003c  f8c102a0          STR      r0,[r1,#0x2a0]
;;;97     }					 				     
000040  bd10              POP      {r4,pc}
;;;98     //IIC发送一个字节
                          ENDP

000042  0000              DCW      0x0000
                  |L3.68|
                          DCD      0x424082a0
                  |L3.72|
                          DCD      0x40020400
                  |L3.76|
                          DCD      0x42408000

                          AREA ||i.IIC_Read_Byte||, CODE, READONLY, ALIGN=2

                  IIC_Read_Byte PROC
;;;118    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
;;;119    u8 IIC_Read_Byte(unsigned char ack)
000000  b570              PUSH     {r4-r6,lr}
;;;120    {
000002  4605              MOV      r5,r0
;;;121    	unsigned char i,receive=0;
000004  2400              MOVS     r4,#0
;;;122    	SDA_IN();//SDA设置为输入
000006  4816              LDR      r0,|L4.96|
000008  6800              LDR      r0,[r0,#0]
00000a  f4202040          BIC      r0,r0,#0xc0000
00000e  4914              LDR      r1,|L4.96|
000010  6008              STR      r0,[r1,#0]
000012  4608              MOV      r0,r1
000014  6800              LDR      r0,[r0,#0]
000016  6008              STR      r0,[r1,#0]
;;;123        for(i=0;i<8;i++ )
000018  2600              MOVS     r6,#0
00001a  e016              B        |L4.74|
                  |L4.28|
;;;124    	{
;;;125            IIC_SCL=0; 
00001c  2000              MOVS     r0,#0
00001e  4911              LDR      r1,|L4.100|
000020  6008              STR      r0,[r1,#0]
;;;126            delay_us(2);
000022  2002              MOVS     r0,#2
000024  f7fffffe          BL       delay_us
;;;127    		IIC_SCL=1;
000028  2001              MOVS     r0,#1
00002a  490f              LDR      r1,|L4.104|
00002c  f8c102a0          STR      r0,[r1,#0x2a0]
;;;128            receive<<=1;
000030  0660              LSLS     r0,r4,#25
000032  0e04              LSRS     r4,r0,#24
;;;129            if(READ_SDA)receive++;   
000034  480b              LDR      r0,|L4.100|
000036  387c              SUBS     r0,r0,#0x7c
000038  6800              LDR      r0,[r0,#0]
00003a  b108              CBZ      r0,|L4.64|
00003c  1c60              ADDS     r0,r4,#1
00003e  b2c4              UXTB     r4,r0
                  |L4.64|
;;;130    		delay_us(1); 
000040  2001              MOVS     r0,#1
000042  f7fffffe          BL       delay_us
000046  1c70              ADDS     r0,r6,#1              ;123
000048  b2c6              UXTB     r6,r0                 ;123
                  |L4.74|
00004a  2e08              CMP      r6,#8                 ;123
00004c  dbe6              BLT      |L4.28|
;;;131        }					 
;;;132        if (!ack)
00004e  b915              CBNZ     r5,|L4.86|
;;;133            IIC_NAck();//发送nACK
000050  f7fffffe          BL       IIC_NAck
000054  e001              B        |L4.90|
                  |L4.86|
;;;134        else
;;;135            IIC_Ack(); //发送ACK   
000056  f7fffffe          BL       IIC_Ack
                  |L4.90|
;;;136        return receive;
00005a  4620              MOV      r0,r4
;;;137    }
00005c  bd70              POP      {r4-r6,pc}
;;;138    
                          ENDP

00005e  0000              DCW      0x0000
                  |L4.96|
                          DCD      0x40020400
                  |L4.100|
                          DCD      0x424082a0
                  |L4.104|
                          DCD      0x42408000

                          AREA ||i.IIC_Send_Byte||, CODE, READONLY, ALIGN=2

                  IIC_Send_Byte PROC
;;;101    //0，无应答			  
;;;102    void IIC_Send_Byte(u8 txd)
000000  b570              PUSH     {r4-r6,lr}
;;;103    {                        
000002  4604              MOV      r4,r0
;;;104        u8 t;   
;;;105    	SDA_OUT(); 	    
000004  4815              LDR      r0,|L5.92|
000006  6800              LDR      r0,[r0,#0]
000008  f4202040          BIC      r0,r0,#0xc0000
00000c  4913              LDR      r1,|L5.92|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f4402080          ORR      r0,r0,#0x40000
000018  6008              STR      r0,[r1,#0]
;;;106        IIC_SCL=0;//拉低时钟开始数据传输
00001a  2000              MOVS     r0,#0
00001c  4910              LDR      r1,|L5.96|
00001e  6008              STR      r0,[r1,#0]
;;;107        for(t=0;t<8;t++)
000020  2500              MOVS     r5,#0
000022  e017              B        |L5.84|
                  |L5.36|
;;;108        {              
;;;109            IIC_SDA=(txd&0x80)>>7;
000024  09e0              LSRS     r0,r4,#7
000026  490e              LDR      r1,|L5.96|
000028  1d09              ADDS     r1,r1,#4
00002a  6008              STR      r0,[r1,#0]
;;;110            txd<<=1; 	  
00002c  0660              LSLS     r0,r4,#25
00002e  0e04              LSRS     r4,r0,#24
;;;111    		delay_us(2);   //对TEA5767这三个延时都是必须的
000030  2002              MOVS     r0,#2
000032  f7fffffe          BL       delay_us
;;;112    		IIC_SCL=1;
000036  2001              MOVS     r0,#1
000038  490a              LDR      r1,|L5.100|
00003a  f8c102a0          STR      r0,[r1,#0x2a0]
;;;113    		delay_us(2); 
00003e  2002              MOVS     r0,#2
000040  f7fffffe          BL       delay_us
;;;114    		IIC_SCL=0;	
000044  2000              MOVS     r0,#0
000046  4906              LDR      r1,|L5.96|
000048  6008              STR      r0,[r1,#0]
;;;115    		delay_us(2);
00004a  2002              MOVS     r0,#2
00004c  f7fffffe          BL       delay_us
000050  1c68              ADDS     r0,r5,#1              ;107
000052  b2c5              UXTB     r5,r0                 ;107
                  |L5.84|
000054  2d08              CMP      r5,#8                 ;107
000056  dbe5              BLT      |L5.36|
;;;116        }	 
;;;117    } 	    
000058  bd70              POP      {r4-r6,pc}
;;;118    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
                          ENDP

00005a  0000              DCW      0x0000
                  |L5.92|
                          DCD      0x40020400
                  |L5.96|
                          DCD      0x424082a0
                  |L5.100|
                          DCD      0x42408000

                          AREA ||i.IIC_Start||, CODE, READONLY, ALIGN=2

                  IIC_Start PROC
;;;33     //产生IIC起始信号
;;;34     void IIC_Start(void)
000000  b510              PUSH     {r4,lr}
;;;35     {
;;;36     	SDA_OUT();     //sda线输出
000002  480f              LDR      r0,|L6.64|
000004  6800              LDR      r0,[r0,#0]
000006  f4202040          BIC      r0,r0,#0xc0000
00000a  490d              LDR      r1,|L6.64|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f4402080          ORR      r0,r0,#0x40000
000016  6008              STR      r0,[r1,#0]
;;;37     	IIC_SDA=1;	  	  
000018  2001              MOVS     r0,#1
00001a  490a              LDR      r1,|L6.68|
00001c  6008              STR      r0,[r1,#0]
;;;38     	IIC_SCL=1;
00001e  490a              LDR      r1,|L6.72|
000020  f8c102a0          STR      r0,[r1,#0x2a0]
;;;39     	delay_us(4);
000024  2004              MOVS     r0,#4
000026  f7fffffe          BL       delay_us
;;;40      	IIC_SDA=0;//START:when CLK is high,DATA change form high to low 
00002a  2000              MOVS     r0,#0
00002c  4905              LDR      r1,|L6.68|
00002e  6008              STR      r0,[r1,#0]
;;;41     	delay_us(4);
000030  2004              MOVS     r0,#4
000032  f7fffffe          BL       delay_us
;;;42     	IIC_SCL=0;//钳住I2C总线，准备发送或接收数据 
000036  2000              MOVS     r0,#0
000038  4903              LDR      r1,|L6.72|
00003a  f8c102a0          STR      r0,[r1,#0x2a0]
;;;43     }	  
00003e  bd10              POP      {r4,pc}
;;;44     //产生IIC停止信号
                          ENDP

                  |L6.64|
                          DCD      0x40020400
                  |L6.68|
                          DCD      0x424082a4
                  |L6.72|
                          DCD      0x42408000

                          AREA ||i.IIC_Stop||, CODE, READONLY, ALIGN=2

                  IIC_Stop PROC
;;;44     //产生IIC停止信号
;;;45     void IIC_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;46     {
;;;47     	SDA_OUT();//sda线输出
000002  480f              LDR      r0,|L7.64|
000004  6800              LDR      r0,[r0,#0]
000006  f4202040          BIC      r0,r0,#0xc0000
00000a  490d              LDR      r1,|L7.64|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f4402080          ORR      r0,r0,#0x40000
000016  6008              STR      r0,[r1,#0]
;;;48     	IIC_SCL=0;
000018  2000              MOVS     r0,#0
00001a  490a              LDR      r1,|L7.68|
00001c  6008              STR      r0,[r1,#0]
;;;49     	IIC_SDA=0;//STOP:when CLK is high DATA change form low to high
00001e  490a              LDR      r1,|L7.72|
000020  f8c102a4          STR      r0,[r1,#0x2a4]
;;;50      	delay_us(4);
000024  2004              MOVS     r0,#4
000026  f7fffffe          BL       delay_us
;;;51     	IIC_SCL=1; 
00002a  2001              MOVS     r0,#1
00002c  4905              LDR      r1,|L7.68|
00002e  6008              STR      r0,[r1,#0]
;;;52     	IIC_SDA=1;//发送I2C总线结束信号
000030  4905              LDR      r1,|L7.72|
000032  f8c102a4          STR      r0,[r1,#0x2a4]
;;;53     	delay_us(4);							   	
000036  2004              MOVS     r0,#4
000038  f7fffffe          BL       delay_us
;;;54     }
00003c  bd10              POP      {r4,pc}
;;;55     //等待应答信号到来
                          ENDP

00003e  0000              DCW      0x0000
                  |L7.64|
                          DCD      0x40020400
                  |L7.68|
                          DCD      0x424082a0
                  |L7.72|
                          DCD      0x42408000

                          AREA ||i.IIC_Wait_Ack||, CODE, READONLY, ALIGN=2

                  IIC_Wait_Ack PROC
;;;57     //        0，接收应答成功
;;;58     u8 IIC_Wait_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;59     {
;;;60     	u8 ucErrTime=0;
000002  2400              MOVS     r4,#0
;;;61     	SDA_IN();      //SDA设置为输入  
000004  4813              LDR      r0,|L8.84|
000006  6800              LDR      r0,[r0,#0]
000008  f4202040          BIC      r0,r0,#0xc0000
00000c  4911              LDR      r1,|L8.84|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  6008              STR      r0,[r1,#0]
;;;62     	IIC_SDA=1;delay_us(1);	   
000016  2001              MOVS     r0,#1
000018  490f              LDR      r1,|L8.88|
00001a  6008              STR      r0,[r1,#0]
00001c  f7fffffe          BL       delay_us
;;;63     	IIC_SCL=1;delay_us(1);	 
000020  2001              MOVS     r0,#1
000022  490e              LDR      r1,|L8.92|
000024  f8c102a0          STR      r0,[r1,#0x2a0]
000028  f7fffffe          BL       delay_us
;;;64     	while(READ_SDA)
00002c  e007              B        |L8.62|
                  |L8.46|
;;;65     	{
;;;66     		ucErrTime++;
00002e  1c60              ADDS     r0,r4,#1
000030  b2c4              UXTB     r4,r0
;;;67     		if(ucErrTime>250)
000032  2cfa              CMP      r4,#0xfa
000034  dd03              BLE      |L8.62|
;;;68     		{
;;;69     			IIC_Stop();
000036  f7fffffe          BL       IIC_Stop
;;;70     			return 1;
00003a  2001              MOVS     r0,#1
                  |L8.60|
;;;71     		}
;;;72     	}
;;;73     	IIC_SCL=0;//时钟输出0 	   
;;;74     	return 0;  
;;;75     } 
00003c  bd10              POP      {r4,pc}
                  |L8.62|
00003e  4806              LDR      r0,|L8.88|
000040  3880              SUBS     r0,r0,#0x80           ;64
000042  6800              LDR      r0,[r0,#0]            ;64
000044  2800              CMP      r0,#0                 ;64
000046  d1f2              BNE      |L8.46|
000048  4903              LDR      r1,|L8.88|
00004a  1f09              SUBS     r1,r1,#4              ;73
00004c  6008              STR      r0,[r1,#0]            ;73
00004e  bf00              NOP                            ;74
000050  e7f4              B        |L8.60|
;;;76     //产生ACK应答
                          ENDP

000052  0000              DCW      0x0000
                  |L8.84|
                          DCD      0x40020400
                  |L8.88|
                          DCD      0x424082a4
                  |L8.92|
                          DCD      0x42408000

;*** Start embedded assembler ***

#line 1 "..\\HARDWARE\\IIC\\myiic.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_myiic_c_IIC_Init____REV16|
#line 129 "..\\CORE\\core_cmInstr.h"
|__asm___7_myiic_c_IIC_Init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_myiic_c_IIC_Init____REVSH|
#line 144
|__asm___7_myiic_c_IIC_Init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
